pipeline {
  agent any
  environment {
    gitcommit = "${gitcommit}"
    KUBE_SERVER = 'https://192.168.49.2:8443'
  }
  tools {
    maven 'mavenjenkins'
  }

  stages {

    stage('VerificaciÃ³n SCM') {
      steps {
        script {
          checkout scm
          sh "git rev-parse --short HEAD > .git/commit-id"
          gitcommit = readFile('.git/commit-id').trim()
        }
      }
    }
    stage('Build') {
      steps {
        sh 'mvn -B -DskipTests clean package'
      }
    }
    stage('Test') {
      steps {
        sh 'mvn test'
      }
      post {
        always {
          junit 'target/surefire-reports/*.xml'
        }
      }
    }
    stage('Docker Build & Push') {
      steps {
        script {
          docker.withRegistry('https://registry.hub.docker.com', 'docker_api_token') {
            def appmavenjenkins = docker.build("rmillav201/devop:${gitcommit}", ".")
            appmavenjenkins.push("latest")
          }
        }
      }
    }
    stage('Deploy to Kubernetes') {
      steps {
        script {
          withCredentials(bindings: [
            string(credentialsId: 'kubernete-jenkis-server-account', variable: 'kubernetes_api_token')
          ]) {
            sh "kubectl --token $kubernetes_api_token --server $KUBE_SERVER --insecure-skip-tls-verify=true apply -f secret-dev.yaml"
            sh "kubectl --token $kubernetes_api_token --server $KUBE_SERVER --insecure-skip-tls-verify=true apply -f shared-volume-claim.yaml"
            sh "kubectl --token $kubernetes_api_token --server $KUBE_SERVER --insecure-skip-tls-verify=true apply -f persistence-volume.yaml"
            sh "kubectl --token $kubernetes_api_token --server $KUBE_SERVER --insecure-skip-tls-verify=true apply -f configmap-devops-demo-init.yaml"
            sh "kubectl --token $kubernetes_api_token --server $KUBE_SERVER --insecure-skip-tls-verify=true apply -f deployment-devops-demo.yaml"
            sh "kubectl --token $kubernetes_api_token --server $KUBE_SERVER --insecure-skip-tls-verify=true apply -f service-devop-demo.yaml"
            sh "kubectl --token $kubernetes_api_token --server $KUBE_SERVER --insecure-skip-tls-verify=true apply -f devops-demo-profesional-ingress.yaml"
          }
        }
      }
    }
  }
}